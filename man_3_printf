.\" Manpage for _printf.
.TH man 3 "may 2022" "1.0" "0x011.C - _printf"

.SH NAME
_printf - format and write a string, character, or integer to stdout

.SH SYNOPSIS
#include "main.h"
.br
#include <stdarg.h>
.br
#include <stdlib.h>
.br
.br
int _printf(const char *format, ...)

.SH DESCRIPTION
The function _printf() is used to produce output as described below. The functions printf() can write output to stdout, which is known as the standard output stream.

.SS Return value
Upon successful return, the functions will return the number of characters
printed (this does not include null byte that ends output to strings).

A negative value of -1 is returne when an output error occur.

.SS The format string:
.br
The format string which is character string, consistof zero or more directive in which ordinary characters when copied, remain unchanged to the output stream. Each conversion specification is introduced by the character %, and ends with the conversion specifier.

.SS The conversion specifiers:
.br
A character that specifies the type of conversion to be applied. The conversion specifier have the following meaning:
.br
d, i - The int argument converts to signed decimal notation.
.br
c -  The int argument converts an unsigned char, and the resulting character is written.
.br
s -  The const char * argumemnt points to an array of character type (pointer to a string).

.SH EXAMPLE
.br
Print a string literal:
.br
int a = 0;
.br
char *a_string = "cat";
.br
a = _printf("test %s\n", a_string);
.br
printf("%d\n", a);
.br
return (0);
.br

.SS General Formatting:
.br
_printf("example format string [ % [ (c) (s) (d) (i) ]]", [variable] [string literal)
.br

.SH ALSO SEE
printf(1), asprintf(3), dprintf(3), scanf(3)
.br

.SH BUGS
No known bugs.
.br
This page borrows from the linxus man 3 page
.br

.SH AUTHOR
.Ebogen Samuel and Benedicta Nwachukwu